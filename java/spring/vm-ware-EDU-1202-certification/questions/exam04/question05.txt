Which of the following are auto-configured when using @WebMvcTest?

A)
Caching
​
B)
Transactions

C)​
Jackson

D)​
Templating engine





































Answers 'A', 'C' and 'D'

To test whether Spring MVC controllers are working as expected, use the @WebMvcTest annotation. 

@WebMvcTest auto-configures the Spring MVC infrastructure and limits scanned beans to @Controller, 
@ControllerAdvice, @JsonComponent, Converter, GenericConverter, Filter, HandlerInterceptor, WebMvcConfigurer, and HandlerMethodArgumentResolver. 

Regular @Component and @ConfigurationProperties beans are not scanned when the @WebMvcTest annotation is used. 

@EnableConfigurationProperties can be used to include @ConfigurationProperties beans. 

Often, @WebMvcTest is limited to a single controller and is used in combination with @MockBean to provide mock implementations for required collaborators. 

@WebMvcTest also auto-configures MockMvc. 
Mock MVC offers a powerful way to quickly test MVC controllers without needing to start a full HTTP server. 

https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-testing-spring-boot-applications-testing-autoconfigured-mvc-tests


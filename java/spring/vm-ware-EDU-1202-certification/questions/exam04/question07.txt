In Spring Boot, how can specific auto-configuration classes be disabled?

A)
@ManualConfiguration annotation

B)​
@Disabled annotationm on the classes
​
C)
"exclude" attribute of the @SpringBootApplication annotation

D)​
Adding explicit configuration classes





































Answers 'C' and 'D'

If the class is not on the classpath, you can use the excludeName attribute of the annotation and specify the fully qualified name instead. 

If you prefer to use @EnableAutoConfiguration rather than @SpringBootApplication, exclude and excludeName are also available. 


@SpringBootApplication(
             excludeName = {"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration", 
                            "org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration"})
public class Application {
   //...   
}

@EnableAutoConfiguration(
             exclude = {DataSourceAutoConfiguration.class, MailSenderAutoConfiguration.class})
public class Application {
   //...
}

Finally, you can also control the list of auto-configuration classes to exclude by using the spring.autoconfigure.exclude property. 

https://docs.spring.io/spring-boot/docs/2.3.4.RELEASE/reference/htmlsingle/#using-boot-disabling-specific-auto-configuration

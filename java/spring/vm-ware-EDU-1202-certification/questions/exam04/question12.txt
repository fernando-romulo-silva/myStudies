Which of the following annotations allow specifying access constraints using Spring Expession Language (SpEL)?

A)
@PostAuthorize
​
B)
@PreAuthorize

C)​
@PreFilter

D)​
@Secured





































Answers 'A'

The annotations @PreAuthorize, @PostAuthorize, @PreFilter and @PostFilter may use SpEL expressions. 

Both @PreAuthorize and @PostAuthorize annotations provide expression-based access control. 

public interface IBookService {
	
	@PreAuthorize ("hasRole('ROLE_WRITE')")
	public void addBook(Book book);

	@PostAuthorize ("returnObject.owner == authentication.name")
	public Book getBook();

	@PreAuthorize ("#book.owner == authentication.name")
	public void deleteBook(Book book);
}



@PreFilter and @PostFilter are designated to use with Spring security to be able to filter collections or arrays based on the authorization.

public interface IBookService {
	
	@PreAuthorize ("hasRole('ROLE_READ')")
	@PostFilter ("filterObject.owner == authentication.name")
	public List<Book> getBooks();
	
	@PreFilter("filterObject.owner == authentication.name")
	public void addBook(List<Book> books);
} 

https://docs.spring.io/spring-security/site/docs/current/reference/html5/#jc-method https://docs.spring.io/spring-security/site/docs/current/reference/html5/#access-control-using-preauthorize-and-postauthorize

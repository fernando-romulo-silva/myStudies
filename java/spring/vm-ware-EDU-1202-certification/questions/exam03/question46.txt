Which of the following annotations can be applied to Spring MVC controller method parameters?
  ​
A)
@RequestHeader
​
B)
@RequestParam

C)​
@RequestBody

D)​
@ModelAttribute








































Answers 'A', 'B', 'C' and 'D'

// --------------------------------------------------------
@RequestParam For access to Servlet request parameters. 
Parameter values are converted to the declared method argument type. 

// http://localhost:8080/api/foos?id=abc

	@GetMapping("/api/foos")
	@ResponseBody
	public String getFoos(@RequestParam String id) {
	    return "ID: " + id;
	}

// --------------------------------------------------------
@RequestHeader For access to request headers. 
Header values are converted to the declared method argument type. 

	@RequestMapping
    public String handleAllTradesRequests (@RequestHeader("User-Agent") String userAgent, Model model) {
        
        model.addAttribute("msg", "all trades requests, User-Agent header  : " + userAgent);
        
        return "my-page";
    }

// --------------------------------------------------------
@ModelAttribute is an annotation that binds a method parameter or method return value to a named model attribute and then exposes it to a web view.

	@RequestMapping(value = "/addEmployee", method = RequestMethod.POST)
	public String submit(@ModelAttribute("employee") Employee employee) {
	    return "employeeView";
	}
	
// --------------------------------------------------------
@RequestBody is the annotation maps the HttpRequest body to a transfer or domain object, enabling automatic deserialization
 of the inbound HttpRequest body onto a Java object.
 
	@PostMapping("/request")
	public ResponseEntity postController(@RequestBody LoginForm loginForm) {
	    exampleService.fakeAuthenticate(loginForm);
	    return ResponseEntity.ok(HttpStatus.OK);
	}

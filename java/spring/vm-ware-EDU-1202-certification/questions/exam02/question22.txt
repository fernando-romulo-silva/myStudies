Which of the following interfaces can be implemented for functionality which runs once per application startup?
  ​
A)​
ApplicationRunner

B)​
CommandLineRunner

D)​
StartupRunner
​
E)
SpringRunner






































Answers 'A' and 'D'

If you need to run some specific code once the SpringApplication has started, you can implement the ApplicationRunner or CommandLineRunner interfaces. 

Both interfaces work in the same way and offer a single run method, which is called just before SpringApplication.run(…​) completes. 

The CommandLineRunner interfaces provides access to application arguments as a string array, whereas the ApplicationRunner uses the ApplicationArguments interface 


@Configuration
public class Exemplo01 implements ApplicationRunner {

    @Override
    public void run(ApplicationArguments applicationArguments) throws Exception {
        System.out.println( "ApplicationRunner" );
        System.out.println( applicationArguments.getOptionNames() );
    }
}

@Configuration
public class Exemplo02 implements CommandLineRunner {

    @Override
    public void run(String... args) throws Exception {
        System.out.println( "CommandLineRunner" );
        System.out.println( args );
    }
}

https://docs.spring.io/spring-boot/docs/2.3.4.RELEASE/reference/htmlsingle/#boot-features-command-line-runner


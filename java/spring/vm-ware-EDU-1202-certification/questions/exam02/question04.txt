Which of the following are ways to call a method after initializing a Spring Bean?
  ​
A)
afterPropertiesSet() defined in InitializingBean

B)​
init-method XML attribute

C)​
call in constructor
​
D)
@PostConstruct








































Answer 'A', 'B', and 'D'

A:

public class MyClass implements InitializingBean {

    static { ... } // static initializer
    { ... }  // non-static initializer

    public void afterPropertiesSet() throws Exception { ... }
}


B:

<bean id="book" class="com.concretepage.Book" init-method="myPostConstruct">


D:

@Component
public class DbInit {

    @Autowired
    private UserRepository userRepository;

    @PostConstruct
    private void postConstruct() {
        User admin = new User("admin", "admin password");
        User normalUser = new User("user", "user password");
        userRepository.save(admin, normalUser);
    }
}


C is wrong because calling in the constructor would be before initializing the class


package br.com.fernando.chapter13_javaPersistence.part05_schemaGeneration;

public class SchemaGeneration01 {

    // JPA 2.1 in the Java EE 7 platform introduces a new set of properties that allows generation of database artifacts like tables,
    // indexes, and constraints in a database schema.
    //
    // This helps in prototyping of your application where the required artifacts are generated either prior to application deployment
    // or as part of EntityManagerFactory creation.
    //
    // This feature will allow your JPA domain object model to be directly generated in a database.
    // The generated schema may need to be tuned for the actual production environment.
    // This use case is supported by allowing the schema generation to occur into DDL scripts, which can then be further tuned by a DBA
    //
    // Schema generation properties in persistence.xml or specified during EntityManagerFactory creation that control the behavior of schema generation.
    //
    // --------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.database.action
    //
    // Purpose: Specifies the action to be taken by the persistence provider.
    // If this property is not specified, no schema generation actions must be taken on the database.
    //
    // Values: none, create, drop-and-create, drop
    //
    // --------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.scripts.action
    //
    // Purpose: Specifies which scripts are to be generated by the persistence provider.
    // A script will only be generated if the script target is specified.
    // If this property is not specified, no scripts will be generated.
    //
    // Values: none, create, drop-and-create, drop
    //
    // -------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.create-source & javax.persistence.schema-generation.drop-source
    //
    // Purpose: Specifies whether the creation or deletion of database artifacts is to occur on the basis of the
    // object/relational mapping metadata, DDL script, or a combination of the two.
    //
    // Values: metadata, script, metadata-then-script, script-then-metadata
    //
    // ------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.create-database-schemas
    //
    // Purpose: Specifies whether the persistence provider needs to create schema in addition to creating database
    // objects such as tables, sequences, constraints, etc.
    //
    // Values: true, false
    //
    // ------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.scripts.create-target & javax.persistence.schema-generation.scripts.drop-target
    //
    // Pursose: Controls target locations for writing of scripts. Writers are preconfigured for the persistence provider.
    // Need to be specified only if scripts are to be generated.
    //
    // Values: java.io.Writer (e.g., MyWriter.class) or URL strings
    //
    // -------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation.create-script-source & javax.persistence.schema-generation.drop-script-source
    //
    // Purpose: Specifies locations from which DDL scripts are to be read.
    // Readers are preconfigured for the persistence provider.
    //
    // Values: java.io.Reader (e.g., MyReader.class) or URL strings
    //
    // -------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.database-product-name, javax.persistence.database-major-version & javax.persistence.database-minor-version
    //
    // Purpose: Needed if scripts are to be generated and no connection to the target database is supplied.
    // Values are those obtained from JDBC DatabaseMetaData
    //
    // -------------------------------------------------------------------------------------------------------------------
    // * javax.persistence.schema-generation-connection
    //
    // Purpose: JDBC connection to be used for schema generation.
    //
    // * javax.persistence.sql-load-script-source
    //
    // Purpose: Specifies location of SQL bulk load script
    //
    // Values: java.io.Reader (e.g., MyReader.class) or URL string
    // -------------------------------------------------------------------------------------------------------------------
}

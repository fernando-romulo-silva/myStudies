package br.com.fernando.client;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "AutoresServiceService", targetNamespace = "http://application.server.fernando.com.br/", wsdlLocation = "https://localhost:8443/soa-cap06-estoque-0.0.1-SNAPSHOT/AutoresService?wsdl")
public class AutoresServiceService extends Service {

    private final static URL AUTORESSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException AUTORESSERVICESERVICE_EXCEPTION;
    private final static QName AUTORESSERVICESERVICE_QNAME = new QName("http://application.server.fernando.com.br/", "AutoresServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("https://localhost:8443/soa-cap06-estoque-0.0.1-SNAPSHOT/AutoresService?wsdl");
        } catch (final MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        AUTORESSERVICESERVICE_WSDL_LOCATION = url;
        AUTORESSERVICESERVICE_EXCEPTION = e;
    }

    public AutoresServiceService() {
        super(__getWsdlLocation(), AUTORESSERVICESERVICE_QNAME);
    }

    public AutoresServiceService(final WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTORESSERVICESERVICE_QNAME, features);
    }

    public AutoresServiceService(final URL wsdlLocation) {
        super(wsdlLocation, AUTORESSERVICESERVICE_QNAME);
    }

    public AutoresServiceService(final URL wsdlLocation, final WebServiceFeature... features) {
        super(wsdlLocation, AUTORESSERVICESERVICE_QNAME, features);
    }

    public AutoresServiceService(final URL wsdlLocation, final QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AutoresServiceService(final URL wsdlLocation, final QName serviceName, final WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return returns AutoresService
     */
    @WebEndpoint(name = "AutoresServicePort")
    public AutoresService getAutoresServicePort() {
        return super.getPort(new QName("http://application.server.fernando.com.br/", "AutoresServicePort"), AutoresService.class);
    }

    /**
     * 
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns AutoresService
     */
    @WebEndpoint(name = "AutoresServicePort")
    public AutoresService getAutoresServicePort(final WebServiceFeature... features) {
        return super.getPort(new QName("http://application.server.fernando.com.br/", "AutoresServicePort"), AutoresService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTORESSERVICESERVICE_EXCEPTION != null) {
            throw AUTORESSERVICESERVICE_EXCEPTION;
        }
        return AUTORESSERVICESERVICE_WSDL_LOCATION;
    }

}

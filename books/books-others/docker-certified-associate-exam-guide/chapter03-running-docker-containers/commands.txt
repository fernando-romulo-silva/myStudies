docker container run nginx:alpine

docker container ls

docker inspect modest_leakey

docker run -ti busybox

# wget http://172.17.0.2 -q -O -

docker container ls --all

docker stop modest_leakey




docker container run --name ping busybox ping www.google.com

time docker container stop ping




docker container create --name webserver nginx:alpine

docker container ls --all --filter name=webserver

docker container ls --filter name=webserver





docker container run busybox ip add

docker container run --network=host busybox ip add




docker container ls

docker container exec webserver ps -ef

docker exec -ti --user nginx --env ENVIRONMENT=test webserver /bin/sh 

# id

# env|grep ENVIRON

# exit

touch /tmp/TEST

docker container cp /tmp/TEST webserver:/tmp/TEST





docker container logs --tail all webserver

docker stats --all --format "table [{{.Container}}] {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}"

docker container top webserver




docker container diff webserver




docker container ls --all --format "table {{.Names}}: {{.Image}} {{.Command}}" --no-trunc 



docker run -ti --cap-add SYS_ADMIN --device /dev/mapper/centos-root:/dev/sdx centos

docker container run -ti --device /dev/snd alpine



===========================================================================================================================
Lab
===========================================================================================================================

docker container --help


===========================================================================================================================

docker run: docker container run
docker ps: docker container ls
docker rm: docker container rm
docker start/stop: docker container start/stop
docker port: docker container port
docker rmi: docker image rm

============================================================================================================================

docker container run -ti -d alpine

docker container ls -l

docker container rename $(docker container ls -ql) myalpineshell

docker container ls -l

docker container attach myalpineshell

docker container rename $(docker container ls -ql) secondshell


============================================================================================================================

docker container rm secondshell

docker container ls --all --filter name=myalpineshell --filter name=secondshell

docker container start -a -i myalpineshell

docker container exec -ti myalpineshell sh

# ps -ef

# exit

docker container ls --all --filter name=myalpineshell

============================================================================================================================

docker container run --memory-reservation=250m --name 2GBreserved -d frjaraur/stress-ng:alpine --vm 2 --vm-bytes 1024M

docker container run --memory=250m --name 2GBlimited -d frjaraur/stress-ng:alpine --vm 2 --vm-bytes 1024M

docker container rm -f 2GBlimited 2GBreserved

docker container run -d --cpus=1 --name CPU2vs1 frjaraur/stress-ng:alpine --cpu 2 --timeout 120

docker container run -d --cpus=2 --name CPU2vs2 frjaraur/stress-ng:alpine --cpu 2 --timeout 120

============================================================================================================================

docker run -d --name web1 --label stage=production nginx:alpine

docker run -d --name web2 --label stage=development nginx:alpine

docker run -d --name web3 --label stage=development nginx:alpine

docker container ls

docker container ls --format "table {{.Names}} {{.Command}}\\t{{.Labels}}"

docker container ls --format "table {{.Names}} {{.Command}}\\t{{.Labels}}" --filter label=stage=development


docker container kill $(docker container ls --format "{{.ID}}" --filter label=stage=development)


docker container ls --format "table {{.Names}}\\t{{.Labels}}"







package br.com.fernando.view.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "LivroWebServiceImpService", targetNamespace = "http://webservices.view.fernando.com.br/", wsdlLocation = "file:/home/fernando/workspace/soa-aplicado/soa-aplicado-cap-06-4/src/main/resources/livroWebService.wsdl")
public class LivroWebServiceImpService
    extends Service
{

    private final static URL LIVROWEBSERVICEIMPSERVICE_WSDL_LOCATION;
    private final static WebServiceException LIVROWEBSERVICEIMPSERVICE_EXCEPTION;
    private final static QName LIVROWEBSERVICEIMPSERVICE_QNAME = new QName("http://webservices.view.fernando.com.br/", "LivroWebServiceImpService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/fernando/workspace/soa-aplicado/soa-aplicado-cap-06-4/src/main/resources/livroWebService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LIVROWEBSERVICEIMPSERVICE_WSDL_LOCATION = url;
        LIVROWEBSERVICEIMPSERVICE_EXCEPTION = e;
    }

    public LivroWebServiceImpService() {
        super(__getWsdlLocation(), LIVROWEBSERVICEIMPSERVICE_QNAME);
    }

    public LivroWebServiceImpService(WebServiceFeature... features) {
        super(__getWsdlLocation(), LIVROWEBSERVICEIMPSERVICE_QNAME, features);
    }

    public LivroWebServiceImpService(URL wsdlLocation) {
        super(wsdlLocation, LIVROWEBSERVICEIMPSERVICE_QNAME);
    }

    public LivroWebServiceImpService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, LIVROWEBSERVICEIMPSERVICE_QNAME, features);
    }

    public LivroWebServiceImpService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LivroWebServiceImpService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns LivroWebService
     */
    @WebEndpoint(name = "livroWebServicePort")
    public LivroWebService getLivroWebServicePort() {
        return super.getPort(new QName("http://webservices.view.fernando.com.br/", "livroWebServicePort"), LivroWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LivroWebService
     */
    @WebEndpoint(name = "livroWebServicePort")
    public LivroWebService getLivroWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://webservices.view.fernando.com.br/", "livroWebServicePort"), LivroWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LIVROWEBSERVICEIMPSERVICE_EXCEPTION!= null) {
            throw LIVROWEBSERVICEIMPSERVICE_EXCEPTION;
        }
        return LIVROWEBSERVICEIMPSERVICE_WSDL_LOCATION;
    }

}


package br.com.fernando.chapter05_soapBasedws.part04_webServiceClient.client;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035 Generated source version: 2.2
 */
@WebServiceClient(name = "DifferentWebService", targetNamespace = "http://differentwebservice.com.br", wsdlLocation = "http://localhost:8080/example/SimpleWebService?wsdl")
public class DifferentWebService_Service extends Service {

    private final static URL DIFFERENTWEBSERVICE_WSDL_LOCATION;

    private final static WebServiceException DIFFERENTWEBSERVICE_EXCEPTION;

    private final static QName DIFFERENTWEBSERVICE_QNAME = new QName("http://differentwebservice.com.br", "DifferentWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/example/SimpleWebService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DIFFERENTWEBSERVICE_WSDL_LOCATION = url;
        DIFFERENTWEBSERVICE_EXCEPTION = e;
    }

    public DifferentWebService_Service() {
        super(__getWsdlLocation(), DIFFERENTWEBSERVICE_QNAME);
    }

    public DifferentWebService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), DIFFERENTWEBSERVICE_QNAME, features);
    }

    public DifferentWebService_Service(URL wsdlLocation) {
        super(wsdlLocation, DIFFERENTWEBSERVICE_QNAME);
    }

    public DifferentWebService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DIFFERENTWEBSERVICE_QNAME, features);
    }

    public DifferentWebService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DifferentWebService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns DifferentWebService
     */
    @WebEndpoint(name = "DifferentPort")
    public DifferentWebService getDifferentPort() {
        return super.getPort(new QName("http://differentwebservice.com.br", "DifferentPort"), DifferentWebService.class);
    }

    /**
     * @param features
     *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns DifferentWebService
     */
    @WebEndpoint(name = "DifferentPort")
    public DifferentWebService getDifferentPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://differentwebservice.com.br", "DifferentPort"), DifferentWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DIFFERENTWEBSERVICE_EXCEPTION != null) {
            throw DIFFERENTWEBSERVICE_EXCEPTION;
        }
        return DIFFERENTWEBSERVICE_WSDL_LOCATION;
    }

}

A host machine has 4 CPUs available and 2 running containers. 
The sysadmin would like to assign 2 CPUs to each container. 
Which of the following commands achieves this?

A)
Set the '--cpuset-cpus' flag of the 'dockerd' process to the value 'even-spread'

B)
Set the '--cpuset-cpus' flag to '.5' on both containers

C)
Set the '--cpu-quota' flag to '0,2' on one container and '1,3' on the other container.

D)
Set the '--cpuset-cpu's flag to '0,2' on one container and '1,3' on the other container.



































Answer D

By default, each container’s access to the host machine’s CPU cycles is unlimited. 
You can set various constraints to limit a given container’s access to the host machine’s CPU cycles.
Several runtime flags allow you to configure the amount of access to CPU resources your container has. 
When you use these settings, Docker modifies the settings for the container’s cgroup on the host machine.

–cpuset-cpus

Limit the specific CPUs or cores a container can use. 
A comma-separated list or hyphen-separated range of CPUs a container can use, if you have more than one CPU. 
The first CPU is numbered 0. 
A valid value might be 0-3 (to use the first, second, third, and fourth CPU) or 1,3 (to use the second and fourth CPU).

https://docs.docker.com/config/containers/resource_constraints/#cpu

We can set cpus in which to allow execution for containers. Examples:

$ docker run -it –cpuset-cpus=”1,3″ ubuntu:14.04 /bin/bash

This means processes in container can be executed on cpu 1 and cpu 3.


$ docker run -it –cpuset-cpus=”0-2″ ubuntu:14.04 /bin/bash

This means processes in container can be executed on cpu 0, cpu 1 and cpu 2.

https://docs.docker.com/engine/reference/run/#cpuset-constraint
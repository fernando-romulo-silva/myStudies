What docker command can you use to add a placement preference to an existing service?

A)
docker service update --pref-add

B)
docker service update --placement-pref-add

C)
docker service update --constraint-add

D)
docker service update --placement-constraint-add





































Answer B

While placement constraints limit the nodes a service can run on, placement preferences try to place tasks on appropriate nodes in an algorithmic way (currently, only spread evenly).

For instance, if you assign each node a rack label, you can set a placement preference to spread the service evenly across nodes with the rack label, by value.
This way, if you lose a rack, the service is still running on nodes on other racks.
Placement preferences are not strictly enforced. 
If no node has the label you specify in your preference, the service is deployed as though the preference was not set.

The following example sets a preference to spread the deployment across nodes based on the value of the datacenter label. 
If some nodes have datacenter=us-east and others have datacenter=us-west, the service is deployed as evenly as possible across the two sets of nodes.


$ docker service create \
	–replicas 9 \
	–name redis_2 \
	–placement-pref ‘spread=node.labels.datacenter’ \
	redis:3.0.6
	

When updating a service with docker service update, –placement-pref-add appends a new placement preference after all existing placement preferences. 

–placement-pref-rm removes an existing placement preference that matches the argument.

In this diagram the containers are first placed by datacenters and then by the rack.	
 
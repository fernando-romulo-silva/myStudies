What are the steps needed to sign images in a way that UCP trusts them? (select three)

A) 
Delegate signing to the keys in your UCP client bundle

B) 
Approve image sign on UCP

C)
Configure Notary client

D)
Initialize trust metadata for the repository 





































Asnwers A, C and D

By default, when you push an image to DTR, the Docker CLI client doesn’t sign the image.
You can configure the Docker CLI client to sign the images you push to DTR. 
This allows whoever pulls your image to validate if they are getting the image you created, or a forged one.

To sign an image you can run:

$ export DOCKER_CONTENT_TRUST=1

$ docker push //:

This pushes the image to DTR and creates trust metadata. 
It also creates public and private key pairs to sign the trust metadata, and push that metadata to the Notary Server internal to DTR.



Sign images that UCP can trust

With the command above you can sign your DTR images, but UCP doesn’t trust them because it can’t tie 
the private key you’re using to sign the images to your UCP account.

To sign images in a way that UCP trusts them you need to:
· Configure your Notary client
· Initialize trust metadata for the repository
· Delegate signing to the keys in your UCP client bundle
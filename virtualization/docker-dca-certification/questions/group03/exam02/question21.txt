Given the following Dockerfile, which of the following is TRUE about it?

---

FROM golang:latest
ADD . /app/example
WORKDIR /app/example
RUN go mod download
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o /my-webapp .

FROM alpine:latest
RUN apk --no-cache add ca-certificates
COPY --from=0 /app/example/my-webapp ./
RUN chmod +x ./my-webapp
ENTRYPOINT ["./my-webapp"]
EXPOSE 8080

A)
The first image will create a binary file sucessfully. 
The second image will fail to run the binary because of the missing 'go' binary.

B)
This will create a image based on both layers found in golang and alpine images.

C)
This will create an image which is based on alpine base image.

D)
This will create an image which is based on golang base image.





















Answer C

Option A is incorrect because we are generating a BINARY file and this can be executed on another host without the need of the Go binary.
Since Go is a compiled programming languague, you don't actually need the Go executable binary in order to 
run your application as you need for Python or Ruby applications.

Option B is incorrect because the final image is based on the alpine image. 
We are only retrieving the compiled binary found on golang image and nothing else from it.

Option C is correct because the final image will be the last one from the build stage.

Option D is incorrect because the final image will be the last one from the build stage

